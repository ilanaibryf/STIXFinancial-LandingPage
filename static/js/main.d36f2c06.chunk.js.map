{"version":3,"sources":["logo.svg","main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","username","email","state","setstate","change","e","target","name","value","React","open","setOpen","open1","setOpen1","handleClose","event","reason","id","autoplay","muted","loop","type","src","class","width","Typography","variant","style","color","marginBottom","onSubmit","preventDefault","axios","post","then","res","data","msg","noValidate","autoComplete","TextField","onChange","size","placeholder","padding","backgroundColor","margin","Button","Snackbar","onClose","autoHideDuration","severity","elevation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,2GCwFAA,MAlFf,WAAiB,IAAD,EAGcC,mBAAS,CAEjCC,SAAS,GACTC,MAAM,KANI,mBAGLC,EAHK,KAGEC,EAHF,KAURC,EAAO,SAACC,GAEZF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOC,KAAMF,EAAEC,OAAOE,UAdjB,EAoBQC,IAAMV,UAAS,GApBvB,mBAoBTW,EApBS,KAoBHC,EApBG,OAqBUF,IAAMV,SAAS,IArBzB,mBAqBTa,EArBS,KAqBFC,EArBE,KA+BVC,EAAc,SAACC,EAAOC,GACT,cAAXA,GAIJL,GAAQ,IAGR,OACI,sBAAKM,GAAG,OAAR,UAEA,uBAAOA,GAAG,UAAWC,SAAS,WAAWC,OAAK,EAACC,MAAI,EAAnD,SACI,wBAAQC,KAAK,YAAYC,IAA4B,iBAGjE,sBAAMC,MAAM,UAAZ,UAGE,qBAAKC,MAAM,QAAQF,IAA4B,eAC7C,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAACC,MAAM,YAAWC,aAAa,QAA/D,SACI,4BACI,iFAMR,uBAAMC,SAnCC,SAACzB,GACRA,EAAE0B,iBAGFC,IAAMC,KAAK,uCAAuC/B,GAAOgC,MAAK,SAACC,GAAOtB,EAASsB,EAAIC,KAAKC,KAAK1B,GAAQ,OA+B7E2B,YAAU,EAACC,aAAa,MAAhD,UAEE,cAACC,EAAA,EAAD,CAAWjC,KAAK,WAAWkC,SAAUrC,EAAQI,MAAON,EAAMF,SAAY4B,MAAM,YAAYc,KAAK,QAAQC,YAAY,WAAWhB,MAAO,CAACiB,QAAQ,MAAMC,gBAAgB,QAAQrB,MAAM,SAAWP,GAAG,iBAAiBS,QAAQ,aACvN,uBACA,cAACc,EAAA,EAAD,CAAWjC,KAAK,QAAQkC,SAAUrC,EAAQI,MAAON,EAAMD,MAAQ2B,MAAM,YAAYkB,OAAO,SAASH,YAAY,gBAAgBD,KAAK,QAAQf,MAAO,CAACiB,QAAQ,MAAMC,gBAAgB,QAAQrB,MAAM,SAAWP,GAAG,iBAAkBS,QAAQ,aACtO,uBACA,cAACqB,EAAA,EAAD,CAAQ1B,KAAK,SAASK,QAAQ,YAAYE,MAAM,YAAhD,oCAKN,cAACoB,EAAA,EAAD,CAAUtC,KAAMA,EAAMuC,QAASnC,EAAaoC,iBAAkB,IAA9D,SAEA,cAAC,IAAD,CAAUD,QAASnC,EAAcqC,SAAS,UAAUC,UAAW,EAAG1B,QAAQ,SAA1E,SACKd,UCnEUyC,MARf,WACE,OACE,qBAAKpC,GAAG,QAAR,SACA,cAAC,EAAD,OCMWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d36f2c06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react'\r\nimport \"./main.css\"\r\nimport {Container,Button,Typography,TextField} from '@material-ui/core';\r\nimport axios from \"axios\"\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nfunction Main() {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n\r\n      username:\"\",\r\n      email:\"\"\r\n\r\n    })\r\n\r\nvar     change=(e)=>{\r\n    \r\n    setstate({\r\n        ...state,\r\n        [e.target.name]:e.target.value\r\n    })\r\n\r\n\r\n}\r\n\r\nconst [open, setOpen] = React.useState(false);\r\nconst [open1, setOpen1] = React.useState(\"\");\r\n\r\nvar submit=(e)=>{\r\n    e.preventDefault()\r\n   // console.log(state)\r\n\r\n    axios.post(\"https://fivrr5.herokuapp.com/getdata\",state).then((res)=>{setOpen1(res.data.msg);setOpen(true);})\r\n}\r\n\r\n\r\nconst handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n    return (\r\n        <div id=\"div1\">\r\n\r\n        <video id=\"videoBG\"  autoplay=\"autoplay\" muted loop>\r\n            <source type=\"video/mp4\" src={process.env.PUBLIC_URL+\"./stix.mp4\"}></source>\r\n</video>\r\n\r\n<div  class=\"content\">\r\n  \r\n  \r\n  <img width=\"400px\" src={process.env.PUBLIC_URL+\"./logo.png\"}/>\r\n    <Typography variant=\"h4\" style={{color:\"#A0A0A0\t\",marginBottom:\"20px\"}}>\r\n        <b>\r\n            <center>\r\n    Earn, Save, And Spend, All In One Place\r\n    </center>\r\n    </b>\r\n    </Typography>\r\n\r\n    <form onSubmit={submit} noValidate autoComplete=\"off\">\r\n      \r\n      <TextField name=\"username\" onChange={change} value={state.username}   color=\"secondary\" size=\"small\" placeholder=\"Username\" style={{padding:\"5px\",backgroundColor:\"white\",width:\"320px\"}}  id=\"outlined-basic\" variant=\"outlined\" />\r\n      <br/>\r\n      <TextField name=\"email\" onChange={change} value={state.email}  color=\"secondary\" margin=\"normal\" placeholder=\"Email Address\" size=\"small\" style={{padding:\"5px\",backgroundColor:\"white\",width:\"320px\"}}  id=\"outlined-basic\"  variant=\"outlined\" />\r\n      <br/>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\" >Get Early Access</Button>\r\n    </form>\r\n</div>\r\n\r\n\r\n<Snackbar open={open} onClose={handleClose} autoHideDuration={3000} >\r\n\r\n<MuiAlert onClose={handleClose}  severity=\"success\" elevation={6} variant=\"filled\">\r\n    {open1}\r\n</MuiAlert>\r\n\r\n\r\n</Snackbar>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./main\"\nfunction App() {\n  return (\n    <div id=\"div10\">\n    <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}